
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESS_THANGREATER_THANnonassocLESS_EQUALGREATER_EQUALleftPLUSMINUSleftTIMESDIVIDEMODAND COMMA DIVIDE ELSE EQ FOR GREATER_EQUAL GREATER_THAN IF IN LBRACE LESS_EQUAL LESS_THAN LIST_LABEL LPAREN LSQUAREBR MINUS MOD NOT NOT_EQ NUM NUM_LABEL OR PARITY PLUS RBRACE RETURN RPAREN RSQUAREBR SEMI_COLON TIMES VAR WHILE\n    prog : func\n    \n    prog : func prog\n    \n    func : type var LPAREN flist RPAREN LBRACE body RBRACE\n    \n    body : stmt \n         | stmt body\n    \n    stmt : expr SEMI_COLON\n         | defvar SEMI_COLON\n         | IF LPAREN expr RPAREN stmt\n         | IF LPAREN expr RPAREN stmt ELSE stmt\n         | WHILE LPAREN expr RPAREN stmt\n         | FOR LPAREN var IN expr RPAREN stmt\n         | RETURN expr SEMI_COLON\n         | LBRACE body RBRACE\n    \n    defvar : type var \n    \n    expr : var LPAREN clist RPAREN\n         | expr LSQUAREBR expr RSQUAREBR\n         | expr EQ expr\n         | expr PLUS expr\n         | expr MINUS expr\n         | expr TIMES expr\n         | expr DIVIDE expr\n         | expr MOD expr\n         | expr LESS_THAN expr\n         | expr GREATER_THAN expr\n         | expr PARITY expr\n         | expr NOT_EQ expr\n         | expr LESS_EQUAL expr\n         | expr GREATER_EQUAL expr\n         | expr OR expr\n         | expr AND expr\n         | NOT expr\n         | MINUS expr\n         | PLUS expr\n         | LPAREN expr RPAREN\n         | var\n         | num\n    \n    flist : type var\n          | type var COMMA flist\n          |\n    \n    clist : expr \n          | expr COMMA clist\n          |\n    \n    type : LIST_LABEL \n         | NUM_LABEL\n    \n    num : NUM\n    \n    var : VAR\n    '
    
_lr_action_items = {'LIST_LABEL':([0,2,9,14,15,20,22,38,40,56,67,86,90,91,94,95,97,98,99,100,],[4,4,4,4,4,4,4,-3,-6,-7,-13,-12,4,4,-8,-10,4,4,-9,-11,]),'NUM_LABEL':([0,2,9,14,15,20,22,38,40,56,67,86,90,91,94,95,97,98,99,100,],[5,5,5,5,5,5,5,-3,-6,-7,-13,-12,5,5,-8,-10,5,5,-9,-11,]),'$end':([1,2,6,38,],[0,-1,-2,-3,]),'VAR':([3,4,5,10,15,17,19,20,22,28,29,30,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,67,86,88,90,91,92,94,95,97,98,99,100,],[8,-43,-44,8,8,8,8,8,8,8,8,8,8,8,-6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-7,8,8,8,-13,-12,8,8,8,8,-8,-10,8,8,-9,-11,]),'LPAREN':([7,8,15,18,19,20,22,25,26,27,28,29,30,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,86,88,90,91,92,94,95,97,98,99,100,],[9,-46,19,35,19,19,19,57,58,59,19,19,19,19,19,-6,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-7,19,19,-13,-12,19,19,19,19,-8,-10,19,19,-9,-11,]),'COMMA':([8,12,18,32,33,61,62,63,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,89,],[-46,14,-35,-36,-45,-33,-32,-31,88,-34,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-15,-16,]),'RPAREN':([8,9,11,12,14,16,18,32,33,35,36,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,93,96,],[-46,-39,13,-37,-39,-38,-35,-36,-45,-42,66,-33,-32,-31,87,-40,-34,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,90,91,-15,-42,-16,-41,98,]),'SEMI_COLON':([8,18,23,24,32,33,34,60,61,62,63,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,89,],[-46,-35,40,56,-36,-45,-14,86,-33,-32,-31,-34,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-15,-16,]),'LSQUAREBR':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,41,-36,-45,41,41,-33,-32,41,41,-34,41,41,-18,-19,-20,-21,-22,-23,-24,41,41,-27,-28,41,41,41,41,-15,-16,41,]),'EQ':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,42,-36,-45,42,42,-33,-32,42,42,-34,42,42,-18,-19,-20,-21,-22,-23,-24,42,42,-27,-28,42,42,42,42,-15,-16,42,]),'PLUS':([8,15,18,19,20,22,23,28,29,30,31,32,33,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,94,95,96,97,98,99,100,],[-46,29,-35,29,29,29,43,29,29,29,29,-36,-45,29,43,-6,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-7,29,29,43,-33,-32,43,43,-34,-13,43,43,-18,-19,-20,-21,-22,43,43,43,43,43,43,43,43,43,43,-12,-15,29,-16,29,29,29,-8,-10,43,29,29,-9,-11,]),'MINUS':([8,15,18,19,20,22,23,28,29,30,31,32,33,35,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,94,95,96,97,98,99,100,],[-46,30,-35,30,30,30,44,30,30,30,30,-36,-45,30,44,-6,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-7,30,30,44,-33,-32,44,44,-34,-13,44,44,-18,-19,-20,-21,-22,44,44,44,44,44,44,44,44,44,44,-12,-15,30,-16,30,30,30,-8,-10,44,30,30,-9,-11,]),'TIMES':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,45,-36,-45,45,45,45,45,45,45,-34,45,45,45,45,-20,-21,-22,45,45,45,45,45,45,45,45,45,45,-15,-16,45,]),'DIVIDE':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,46,-36,-45,46,46,46,46,46,46,-34,46,46,46,46,-20,-21,-22,46,46,46,46,46,46,46,46,46,46,-15,-16,46,]),'MOD':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,47,-36,-45,47,47,47,47,47,47,-34,47,47,47,47,-20,-21,-22,47,47,47,47,47,47,47,47,47,47,-15,-16,47,]),'LESS_THAN':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,48,-36,-45,48,48,-33,-32,48,48,-34,48,48,-18,-19,-20,-21,-22,None,None,48,48,-27,-28,48,48,48,48,-15,-16,48,]),'GREATER_THAN':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,49,-36,-45,49,49,-33,-32,49,49,-34,49,49,-18,-19,-20,-21,-22,None,None,49,49,-27,-28,49,49,49,49,-15,-16,49,]),'PARITY':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,50,-36,-45,50,50,-33,-32,50,50,-34,50,50,-18,-19,-20,-21,-22,-23,-24,50,50,-27,-28,50,50,50,50,-15,-16,50,]),'NOT_EQ':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,51,-36,-45,51,51,-33,-32,51,51,-34,51,51,-18,-19,-20,-21,-22,-23,-24,51,51,-27,-28,51,51,51,51,-15,-16,51,]),'LESS_EQUAL':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,52,-36,-45,52,52,-33,-32,52,52,-34,52,52,-18,-19,-20,-21,-22,52,52,52,52,None,None,52,52,52,52,-15,-16,52,]),'GREATER_EQUAL':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,53,-36,-45,53,53,-33,-32,53,53,-34,53,53,-18,-19,-20,-21,-22,53,53,53,53,None,None,53,53,53,53,-15,-16,53,]),'OR':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,54,-36,-45,54,54,-33,-32,54,54,-34,54,54,-18,-19,-20,-21,-22,-23,-24,54,54,-27,-28,54,54,54,54,-15,-16,54,]),'AND':([8,18,23,32,33,36,60,61,62,63,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,89,96,],[-46,-35,55,-36,-45,55,55,-33,-32,55,55,-34,55,55,-18,-19,-20,-21,-22,-23,-24,55,55,-27,-28,55,55,55,55,-15,-16,55,]),'RSQUAREBR':([8,18,32,33,61,62,63,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,87,89,],[-46,-35,-36,-45,-33,-32,-31,-34,89,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-15,-16,]),'IN':([8,85,],[-46,92,]),'LBRACE':([13,15,20,22,40,56,67,86,90,91,94,95,97,98,99,100,],[15,20,20,20,-6,-7,-13,-12,20,20,-8,-10,20,20,-9,-11,]),'IF':([15,20,22,40,56,67,86,90,91,94,95,97,98,99,100,],[25,25,25,-6,-7,-13,-12,25,25,-8,-10,25,25,-9,-11,]),'WHILE':([15,20,22,40,56,67,86,90,91,94,95,97,98,99,100,],[26,26,26,-6,-7,-13,-12,26,26,-8,-10,26,26,-9,-11,]),'FOR':([15,20,22,40,56,67,86,90,91,94,95,97,98,99,100,],[27,27,27,-6,-7,-13,-12,27,27,-8,-10,27,27,-9,-11,]),'RETURN':([15,20,22,40,56,67,86,90,91,94,95,97,98,99,100,],[28,28,28,-6,-7,-13,-12,28,28,-8,-10,28,28,-9,-11,]),'NOT':([15,19,20,22,28,29,30,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,86,88,90,91,92,94,95,97,98,99,100,],[31,31,31,31,31,31,31,31,31,-6,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-7,31,31,-13,-12,31,31,31,31,-8,-10,31,31,-9,-11,]),'NUM':([15,19,20,22,28,29,30,31,35,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,67,86,88,90,91,92,94,95,97,98,99,100,],[33,33,33,33,33,33,33,33,33,-6,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-7,33,33,-13,-12,33,33,33,33,-8,-10,33,33,-9,-11,]),'RBRACE':([21,22,37,39,40,56,67,86,94,95,99,100,],[38,-4,67,-5,-6,-7,-13,-12,-8,-10,-9,-11,]),'ELSE':([40,56,67,86,94,95,99,100,],[-6,-7,-13,-12,97,-10,-9,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,2,],[1,6,]),'func':([0,2,],[2,2,]),'type':([0,2,9,14,15,20,22,90,91,97,98,],[3,3,10,10,17,17,17,17,17,17,17,]),'var':([3,10,15,17,19,20,22,28,29,30,31,35,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,88,90,91,92,97,98,],[7,12,18,34,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,85,18,18,18,18,18,18,]),'flist':([9,14,],[11,16,]),'body':([15,20,22,],[21,37,39,]),'stmt':([15,20,22,90,91,97,98,],[22,22,22,94,95,99,100,]),'expr':([15,19,20,22,28,29,30,31,35,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,88,90,91,92,97,98,],[23,36,23,23,60,61,62,63,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,65,23,23,96,23,23,]),'defvar':([15,20,22,90,91,97,98,],[24,24,24,24,24,24,24,]),'num':([15,19,20,22,28,29,30,31,35,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,88,90,91,92,97,98,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'clist':([35,88,],[64,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> func','prog',1,'p_program_single','middle_code_generator.py',159),
  ('prog -> func prog','prog',2,'p_program_multiple','middle_code_generator.py',166),
  ('func -> type var LPAREN flist RPAREN LBRACE body RBRACE','func',8,'p_function','middle_code_generator.py',174),
  ('body -> stmt','body',1,'p_body_function','middle_code_generator.py',253),
  ('body -> stmt body','body',2,'p_body_function','middle_code_generator.py',254),
  ('stmt -> expr SEMI_COLON','stmt',2,'p_statement','middle_code_generator.py',266),
  ('stmt -> defvar SEMI_COLON','stmt',2,'p_statement','middle_code_generator.py',267),
  ('stmt -> IF LPAREN expr RPAREN stmt','stmt',5,'p_statement','middle_code_generator.py',268),
  ('stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','stmt',7,'p_statement','middle_code_generator.py',269),
  ('stmt -> WHILE LPAREN expr RPAREN stmt','stmt',5,'p_statement','middle_code_generator.py',270),
  ('stmt -> FOR LPAREN var IN expr RPAREN stmt','stmt',7,'p_statement','middle_code_generator.py',271),
  ('stmt -> RETURN expr SEMI_COLON','stmt',3,'p_statement','middle_code_generator.py',272),
  ('stmt -> LBRACE body RBRACE','stmt',3,'p_statement','middle_code_generator.py',273),
  ('defvar -> type var','defvar',2,'p_define_variable','middle_code_generator.py',471),
  ('expr -> var LPAREN clist RPAREN','expr',4,'p_define_expression','middle_code_generator.py',490),
  ('expr -> expr LSQUAREBR expr RSQUAREBR','expr',4,'p_define_expression','middle_code_generator.py',491),
  ('expr -> expr EQ expr','expr',3,'p_define_expression','middle_code_generator.py',492),
  ('expr -> expr PLUS expr','expr',3,'p_define_expression','middle_code_generator.py',493),
  ('expr -> expr MINUS expr','expr',3,'p_define_expression','middle_code_generator.py',494),
  ('expr -> expr TIMES expr','expr',3,'p_define_expression','middle_code_generator.py',495),
  ('expr -> expr DIVIDE expr','expr',3,'p_define_expression','middle_code_generator.py',496),
  ('expr -> expr MOD expr','expr',3,'p_define_expression','middle_code_generator.py',497),
  ('expr -> expr LESS_THAN expr','expr',3,'p_define_expression','middle_code_generator.py',498),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_define_expression','middle_code_generator.py',499),
  ('expr -> expr PARITY expr','expr',3,'p_define_expression','middle_code_generator.py',500),
  ('expr -> expr NOT_EQ expr','expr',3,'p_define_expression','middle_code_generator.py',501),
  ('expr -> expr LESS_EQUAL expr','expr',3,'p_define_expression','middle_code_generator.py',502),
  ('expr -> expr GREATER_EQUAL expr','expr',3,'p_define_expression','middle_code_generator.py',503),
  ('expr -> expr OR expr','expr',3,'p_define_expression','middle_code_generator.py',504),
  ('expr -> expr AND expr','expr',3,'p_define_expression','middle_code_generator.py',505),
  ('expr -> NOT expr','expr',2,'p_define_expression','middle_code_generator.py',506),
  ('expr -> MINUS expr','expr',2,'p_define_expression','middle_code_generator.py',507),
  ('expr -> PLUS expr','expr',2,'p_define_expression','middle_code_generator.py',508),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_define_expression','middle_code_generator.py',509),
  ('expr -> var','expr',1,'p_define_expression','middle_code_generator.py',510),
  ('expr -> num','expr',1,'p_define_expression','middle_code_generator.py',511),
  ('flist -> type var','flist',2,'p_variable_multiple','middle_code_generator.py',877),
  ('flist -> type var COMMA flist','flist',4,'p_variable_multiple','middle_code_generator.py',878),
  ('flist -> <empty>','flist',0,'p_variable_multiple','middle_code_generator.py',879),
  ('clist -> expr','clist',1,'p_variable_array','middle_code_generator.py',904),
  ('clist -> expr COMMA clist','clist',3,'p_variable_array','middle_code_generator.py',905),
  ('clist -> <empty>','clist',0,'p_variable_array','middle_code_generator.py',906),
  ('type -> LIST_LABEL','type',1,'p_variabel_type','middle_code_generator.py',919),
  ('type -> NUM_LABEL','type',1,'p_variabel_type','middle_code_generator.py',920),
  ('num -> NUM','num',1,'p_expr_num','middle_code_generator.py',927),
  ('var -> VAR','var',1,'p_expr_var','middle_code_generator.py',934),
]
